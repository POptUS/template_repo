#
# Setup and manage python virtual environments that allow users to develop and
# test the mytemplate2 python package.
#

[tox]
requires = tox>=4
env_list =

[testenv]
description = Run the mytemplate2 full test suite
passenv = COVERAGE_FILE
setenv =
    COV_FILE = {env:COVERAGE_FILE:.coverage_mytemplate2}
    DOC_ROOT = docs
deps =
    coverage: coverage
usedevelop =
    coverage: true
    nocoverage: false
commands =
    nocoverage: python -m unittest mytemplate2 -v
    coverage: coverage run --rcfile={toxinidir}/.coveragerc --data-file={env:COV_FILE} -m unittest discover -s ./src/mytemplate2 -t .. -v

[testenv:oldest]
description = Run the mytemplate2 full test suite using the oldest dependencies
deps = -r{toxinidir}/oldest_reqs.txt
commands = python -m unittest mytemplate2 -v

[testenv:subC]
description = Run the mytemplate2 subC test suite
commands = python -m unittest mytemplate2.subC

[testenv:report]
description = Generate coverage reports
depends = coverage
deps = coverage
skip_install = true
commands = 
    coverage report --data-file={env:COV_FILE}
    coverage html --data-file={env:COV_FILE}

[testenv:testdeploy]
description = Deploy distribution to TestPyPi for testing
deps = twine
commands = 
    python setup.py sdist
    python setup.py bdist_wheel
    # This will prompt for username/password
    #
    # If dist was not empty beforehand, this could potentially upload many
    # different versions of distributions.
    twine upload --repository testpypi dist/*

[testenv:check]
# This should only *report* issues.  It should *not* alter any files.
description = Run code quality checks
deps =
    flake8
commands =
    python setup.py check --strict --metadata
    # This call does not appear to be following the symlinks of the
    # subpackages ...
    flake8 --config={toxinidir}/.flake8
    # so we check those manually.
    flake8 --config={toxinidir}/.flake8 ./src/mytemplate2/subC
    # TODO: Add in mypy

[testenv:format]
# This can alter files, so users should use with care and this should never be
# a default task.
description = Clean-up code with black
deps = black
skip_install = true
commands = black {toxinidir}

[testenv:html]
description = Generate mytemplate2's HTML documentation
deps =
    sphinx
    sphinxcontrib-proof
    sphinxcontrib-bibtex
    sphinx_rtd_theme
commands = 
    sphinx-build --version
    sphinx-build -E -b html {env:DOC_ROOT} {env:DOC_ROOT}/build_html

[testenv:pdf]
description = Generate mytemplate2's PDF documentation
deps =
    sphinx
    sphinxcontrib-proof
    sphinxcontrib-bibtex
allowlist_externals = make
commands = 
    sphinx-build --version
    sphinx-build -E -b latex {env:DOC_ROOT} {env:DOC_ROOT}/build_pdf
    make -C {env:DOC_ROOT}/build_pdf
