#
# Setup and manage python virtual environments that allow users to develop and
# test the mytemplate2 python package.
#
# TODO: It would be nice to have an env that runs on the oldest python version
# allowed using the oldest version of all dependencies allowed.  Can we write a
# requirements.txt file for that setup and read in the versions in setup.py to
# reduce duplicated information?
#

[tox]
requires = tox>=4
env_list =

[testenv]
passenv = COVERAGE_FILE
setenv =
    COV_FILE = {env:COVERAGE_FILE:.coverage_mytemplate2}

# Version numbers must remain synchronized with setup.py
[testenv:py{39,310,311}-{coverage,nocoverage}]
description = Run the mytemplate2 full test suite
deps =
    coverage: coverage
usedevelop =
    coverage: true
    nocoverage: false
commands =
    nocoverage: python -m unittest mytemplate2 -v
    coverage: coverage run --data-file={env:COV_FILE} -m unittest discover -s ./src/mytemplate2 -t .. -v

[testenv:subC]
description = Run the mytemplate2 subC test suite
commands = python -m unittest mytemplate2.subC

[testenv:report]
description = Generate coverage reports
depends = coverage
deps = coverage
skip_install = true
commands = 
    coverage report --data-file={env:COV_FILE}
    coverage html --data-file={env:COV_FILE}

[testenv:testdeploy]
description = Deploy distribution to TestPyPi for testing
deps = twine
commands = 
    python setup.py sdist
    python setup.py bdist_wheel
    # This will prompt for username/password
    #
    # If dist was not empty beforehand, this could potentially upload many
    # different versions of distributions.
    twine upload --repository testpypi dist/*

[testenv:check]
description = Run code quality checks
deps =
    flake8
commands =
    python setup.py check --strict --metadata
    # TODO: This doesn't seem to run on the installed package and isn't finding
    # the files in the symlinked sub-packages
    flake8 --per-file-ignores="src/mytemplate2/__init__.py:F401"
    # TODO: Add in mypy?

[testenv:format]
description = Clean-up code with black
deps = black
skip_install = true
commands = black {toxinidir}
